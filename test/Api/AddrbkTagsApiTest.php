<?php
/**
 * AddrbkTagsApiTest
 * PHP version 7.3
 *
 * @category Class
 * @package  LanXinPlusOpenAPI
 * @author   LanXin OPEN
 * @link     https://openapi.lanxin.cn
 */

/**
 * LanXin+ OpenAPI
 *
 * LanXin+ OpenAPI Platform
 *
 * Generated by: https://openapi.lanxin.cn
 */



namespace LanXinPlusOpenAPI\Test\Api;

use PHPUnit\Framework\TestCase;
use \GuzzleHttp\Client;
use \LanXinPlusOpenAPI\Configuration;
use \LanXinPlusOpenAPI\ApiException;
use \LanXinPlusOpenAPI\ObjectSerializer;
use \LanXinPlusOpenAPI\Api\AddrbkTagsApi;
use \LanXinPlusOpenAPI\Api\AuthApi;


/**
 * AddrbkTagsApiTest Class Doc Comment
 *
 * @category Class
 * @package  LanXinPlusOpenAPI
 * @author   LanXin OPEN
 * @link     https://openapi.lanxin.cn
 */
class AddrbkTagsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    protected static $config;
    public static function setUpBeforeClass(): void
    {
        // 蓝信开放平台网关地址, e.g.: https://example.com/open/apigw
        $host = "host";
        // 应用ID, e.g.: 1234567-7654321
        $appId = "appId";
        // 应用密钥, e.g.: D25F65E65D887AEFD9C92B00310286FA
        $appSecret = "appSecret";

        $config = new Configuration($host, $appId, $appSecret);
        $api = new AuthApi(new Client(), $config);
        $resp = $api->V1ApptokenCreate("client_credential" ,$appId, $appSecret);
        if ($resp->getErrCode() !=0) {
            echo "err in get appToken, errCode:", $resp->getErrCode(), ", errMsg:", $resp->getErrMsg(), PHP_EOL;
        }else{
            $config->setAppToken($resp->getData()->getAppToken());
            self::$config = $config;
        };
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for v1TagGroupsCreate
     *
     * 创建标签分组.
     *
     */
    public function testV1TagGroupsCreate()
    {
        $api = new AddrbkTagsApi(new Client(),self::$config);
        $app_token = self::$config->getAppToken(); // string | app_token 
        $v1_tag_groups_create_request_body = new \LanXinPlusOpenAPI\Model\V1TagGroupsCreateRequestBody(); // \LanXinPlusOpenAPI\Model\V1TagGroupsCreateRequestBody | Request Body 
        $user_token = self::$config->getUserToken(); // string | user_token (可选参数)
        try{
            $resp = $api->v1TagGroupsCreate($app_token, $v1_tag_groups_create_request_body);
            print_r($resp);
            $this->assertEquals($resp->getErrCode(), 0);
        } catch (Exception $e) {
            echo 'Exception when calling AddrbkTagsApi->v1TagGroupsCreate: ', $e->getMessage(), PHP_EOL;
        }
    }

    /**
     * Test case for v1TagGroupsDelete
     *
     * 删除标签分组.
     *
     */
    public function testV1TagGroupsDelete()
    {
        $api = new AddrbkTagsApi(new Client(),self::$config);
        $app_token = self::$config->getAppToken(); // string | app_token 
        $tag_group_id = 'tag_group_id_example'; // string | tag_group_id 
        $user_token = self::$config->getUserToken(); // string | user_token (可选参数)
        try{
            $resp = $api->v1TagGroupsDelete($app_token, $tag_group_id);
            print_r($resp);
            $this->assertEquals($resp->getErrCode(), 0);
        } catch (Exception $e) {
            echo 'Exception when calling AddrbkTagsApi->v1TagGroupsDelete: ', $e->getMessage(), PHP_EOL;
        }
    }

    /**
     * Test case for v1TagGroupsFetch
     *
     * 获取标签分组列表.
     *
     */
    public function testV1TagGroupsFetch()
    {
        $api = new AddrbkTagsApi(new Client(),self::$config);
        $app_token = self::$config->getAppToken(); // string | app_token 
        $v1_tag_groups_fetch_request_body = new \LanXinPlusOpenAPI\Model\V1TagGroupsFetchRequestBody(); // \LanXinPlusOpenAPI\Model\V1TagGroupsFetchRequestBody | Request Body 
        $user_token = self::$config->getUserToken(); // string | user_token (可选参数)
        try{
            $resp = $api->v1TagGroupsFetch($app_token, $v1_tag_groups_fetch_request_body);
            print_r($resp);
            $this->assertEquals($resp->getErrCode(), 0);
        } catch (Exception $e) {
            echo 'Exception when calling AddrbkTagsApi->v1TagGroupsFetch: ', $e->getMessage(), PHP_EOL;
        }
    }

    /**
     * Test case for v1TagGroupsInfoFetch
     *
     * 获取标签分组详情.
     *
     */
    public function testV1TagGroupsInfoFetch()
    {
        $api = new AddrbkTagsApi(new Client(),self::$config);
        $app_token = self::$config->getAppToken(); // string | app_token 
        $tag_group_id = 'tag_group_id_example'; // string | tag_group_id 
        $user_token = self::$config->getUserToken(); // string | user_token (可选参数)
        try{
            $resp = $api->v1TagGroupsInfoFetch($app_token, $tag_group_id);
            print_r($resp);
            $this->assertEquals($resp->getErrCode(), 0);
        } catch (Exception $e) {
            echo 'Exception when calling AddrbkTagsApi->v1TagGroupsInfoFetch: ', $e->getMessage(), PHP_EOL;
        }
    }

    /**
     * Test case for v1TagGroupsUpdate
     *
     * 修改标签分组.
     *
     */
    public function testV1TagGroupsUpdate()
    {
        $api = new AddrbkTagsApi(new Client(),self::$config);
        $app_token = self::$config->getAppToken(); // string | app_token 
        $tag_group_id = 'tag_group_id_example'; // string | tag_group_id 
        $v1_tag_groups_update_request_body = new \LanXinPlusOpenAPI\Model\V1TagGroupsUpdateRequestBody(); // \LanXinPlusOpenAPI\Model\V1TagGroupsUpdateRequestBody | Request Body 
        $user_token = self::$config->getUserToken(); // string | user_token (可选参数)
        try{
            $resp = $api->v1TagGroupsUpdate($app_token, $tag_group_id, $v1_tag_groups_update_request_body);
            print_r($resp);
            $this->assertEquals($resp->getErrCode(), 0);
        } catch (Exception $e) {
            echo 'Exception when calling AddrbkTagsApi->v1TagGroupsUpdate: ', $e->getMessage(), PHP_EOL;
        }
    }

    /**
     * Test case for v1TagsCreate
     *
     * 创建标签.
     *
     */
    public function testV1TagsCreate()
    {
        $api = new AddrbkTagsApi(new Client(),self::$config);
        $app_token = self::$config->getAppToken(); // string | app_token 
        $v1_tags_create_request_body = new \LanXinPlusOpenAPI\Model\V1TagsCreateRequestBody(); // \LanXinPlusOpenAPI\Model\V1TagsCreateRequestBody | Request Body 
        $user_token = self::$config->getUserToken(); // string | user_token (可选参数)
        try{
            $resp = $api->v1TagsCreate($app_token, $v1_tags_create_request_body);
            print_r($resp);
            $this->assertEquals($resp->getErrCode(), 0);
        } catch (Exception $e) {
            echo 'Exception when calling AddrbkTagsApi->v1TagsCreate: ', $e->getMessage(), PHP_EOL;
        }
    }

    /**
     * Test case for v1TagsDelete
     *
     * 删除标签.
     *
     */
    public function testV1TagsDelete()
    {
        $api = new AddrbkTagsApi(new Client(),self::$config);
        $app_token = self::$config->getAppToken(); // string | app_token 
        $tagid = 'tagid_example'; // string | tagid 
        $user_token = self::$config->getUserToken(); // string | user_token (可选参数)
        try{
            $resp = $api->v1TagsDelete($app_token, $tagid);
            print_r($resp);
            $this->assertEquals($resp->getErrCode(), 0);
        } catch (Exception $e) {
            echo 'Exception when calling AddrbkTagsApi->v1TagsDelete: ', $e->getMessage(), PHP_EOL;
        }
    }

    /**
     * Test case for v1TagsMetaFetch
     *
     * 获取标签详情.
     *
     */
    public function testV1TagsMetaFetch()
    {
        $api = new AddrbkTagsApi(new Client(),self::$config);
        $app_token = self::$config->getAppToken(); // string | app_token 
        $v1_tags_meta_fetch_request_body = new \LanXinPlusOpenAPI\Model\V1TagsMetaFetchRequestBody(); // \LanXinPlusOpenAPI\Model\V1TagsMetaFetchRequestBody | Request Body 
        $user_token = self::$config->getUserToken(); // string | user_token (可选参数)
        try{
            $resp = $api->v1TagsMetaFetch($app_token, $v1_tags_meta_fetch_request_body);
            print_r($resp);
            $this->assertEquals($resp->getErrCode(), 0);
        } catch (Exception $e) {
            echo 'Exception when calling AddrbkTagsApi->v1TagsMetaFetch: ', $e->getMessage(), PHP_EOL;
        }
    }

    /**
     * Test case for v1TagsUpdate
     *
     * 修改标签.
     *
     */
    public function testV1TagsUpdate()
    {
        $api = new AddrbkTagsApi(new Client(),self::$config);
        $app_token = self::$config->getAppToken(); // string | app_token 
        $tagid = 'tagid_example'; // string | tagid 
        $v1_tags_update_request_body = new \LanXinPlusOpenAPI\Model\V1TagsUpdateRequestBody(); // \LanXinPlusOpenAPI\Model\V1TagsUpdateRequestBody | Request Body 
        $user_token = self::$config->getUserToken(); // string | user_token (可选参数)
        try{
            $resp = $api->v1TagsUpdate($app_token, $tagid, $v1_tags_update_request_body);
            print_r($resp);
            $this->assertEquals($resp->getErrCode(), 0);
        } catch (Exception $e) {
            echo 'Exception when calling AddrbkTagsApi->v1TagsUpdate: ', $e->getMessage(), PHP_EOL;
        }
    }
}
